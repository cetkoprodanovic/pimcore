<?php

namespace ContainerCcF9MAJ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Logout_Listener_LegacySuccessListener_DemoFrontendService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.logout.listener.legacy_success_listener.demo_frontend' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\LegacyLogoutHandlerListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-bundle/Security/LegacyLogoutHandlerListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Logout/LogoutSuccessHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Logout/DefaultLogoutSuccessHandler.php';
        include_once \dirname(__DIR__, 4).'/src/EventListener/AuthenticationLogoutListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/lib/Session/SessionConfiguratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/bundles/EcommerceFrameworkBundle/Tools/SessionConfigurator.php';

        return $container->privates['security.logout.listener.legacy_success_listener.demo_frontend'] = new \Symfony\Bundle\SecurityBundle\Security\LegacyLogoutHandlerListener(new \App\EventListener\AuthenticationLogoutListener(($container->privates['security.http_utils'] ?? $container->getSecurity_HttpUtilsService()), ($container->services['pimcore_ecommerce.environment'] ?? $container->getPimcoreEcommerce_EnvironmentService()), ($container->privates['Pimcore\\Bundle\\EcommerceFrameworkBundle\\Tools\\SessionConfigurator'] ?? ($container->privates['Pimcore\\Bundle\\EcommerceFrameworkBundle\\Tools\\SessionConfigurator'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\Tools\SessionConfigurator())), ($container->services['session'] ?? $container->load('getSessionService'))));
    }
}
