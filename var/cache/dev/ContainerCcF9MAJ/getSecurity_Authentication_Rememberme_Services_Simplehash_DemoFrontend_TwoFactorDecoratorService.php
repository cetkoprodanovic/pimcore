<?php

namespace ContainerCcF9MAJ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authentication_Rememberme_Services_Simplehash_DemoFrontend_TwoFactorDecoratorService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.authentication.rememberme.services.simplehash.demo_frontend.two_factor_decorator' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\Authentication\RememberMe\RememberMeServicesDecorator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/RememberMe/RememberMeServicesInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Logout/LogoutHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/scheb/2fa-bundle/Security/Authentication/RememberMe/RememberMeServicesDecorator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/RememberMe/AbstractRememberMeServices.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/RememberMe/TokenBasedRememberMeServices.php';

        return $container->privates['security.authentication.rememberme.services.simplehash.demo_frontend.two_factor_decorator'] = new \Scheb\TwoFactorBundle\Security\Authentication\RememberMe\RememberMeServicesDecorator(new \Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['cmf.security.user_provider.oauth'] ?? $container->load('getCmf_Security_UserProvider_OauthService'));
        }, 1), 'mOh6536xDgPgqzIaQ1/Hp4l5JwAkZkXPXxfC5uE9Nbw=', 'demo_frontend', ['name' => 'REMEMBERME', 'lifetime' => 31536000, 'path' => '/', 'domain' => NULL, 'secure' => false, 'httponly' => true, 'samesite' => 'strict', 'always_remember_me' => false, 'remember_me_parameter' => '_remember_me'], ($container->services['monolog.logger.security'] ?? $container->getMonolog_Logger_SecurityService())));
    }
}
