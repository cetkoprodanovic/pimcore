a:343:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:273:"The "Scheb\TwoFactorBundle\DependencyInjection\Factory\Security\TwoFactorFactory" class implements "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SecurityFactoryInterface" that is deprecated since Symfony 5.3, use AuthenticatorFactoryInterface instead.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:115:"/opt/bitnami/pimcore/vendor/scheb/2fa-bundle/DependencyInjection/Factory/Security/AuthenticatorTwoFactorFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Class "Scheb\TwoFactorBundle\DependencyInjection\Factory\Security\AuthenticatorTwoFactorFactory" should implement method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\AuthenticatorFactoryInterface::getPriority(): int": defines the position at which the authenticator is called.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:58:"/opt/bitnami/pimcore/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:678;s:8:"function";s:5:"build";s:5:"class";s:42:"Scheb\TwoFactorBundle\SchebTwoFactorBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:197:"Since symfony/security-bundle 5.4: Method "Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension::addSecurityListenerFactory()" is deprecated, use "addAuthenticatorFactory()" instead.";s:4:"file";s:93:"/opt/bitnami/pimcore/vendor/symfony/security-bundle/DependencyInjection/SecurityExtension.php";s:4:"line";i:1103;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"/opt/bitnami/pimcore/vendor/scheb/2fa-bundle/SchebTwoFactorBundle.php";s:4:"line";i:53;s:8:"function";s:26:"addSecurityListenerFactory";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:3;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"The "Pimcore\Bundle\AdminBundle\Security\Factory\PreAuthenticatedAdminSessionFactory" class implements "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SecurityFactoryInterface" that is deprecated since Symfony 5.3, use AuthenticatorFactoryInterface instead.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:58:"/opt/bitnami/pimcore/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:678;s:8:"function";s:5:"build";s:5:"class";s:45:"Pimcore\Bundle\AdminBundle\PimcoreAdminBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:369:"Method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SecurityFactoryInterface::getKey()" might add "string" as a native return type declaration in the future. Do the same in implementation "HWI\Bundle\OAuthBundle\DependencyInjection\Security\Factory\OAuthFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:111:"/opt/bitnami/pimcore/vendor/hwi/oauth-bundle/DependencyInjection/Security/Factory/OAuthAuthenticatorFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:374:"Method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SecurityFactoryInterface::getPosition()" might add "string" as a native return type declaration in the future. Do the same in implementation "HWI\Bundle\OAuthBundle\DependencyInjection\Security\Factory\OAuthFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:111:"/opt/bitnami/pimcore/vendor/hwi/oauth-bundle/DependencyInjection/Security/Factory/OAuthAuthenticatorFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:369:"Method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\AbstractFactory::createAuthProvider()" might add "string" as a native return type declaration in the future. Do the same in child class "HWI\Bundle\OAuthBundle\DependencyInjection\Security\Factory\OAuthFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:111:"/opt/bitnami/pimcore/vendor/hwi/oauth-bundle/DependencyInjection/Security/Factory/OAuthAuthenticatorFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:368:"Method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\AbstractFactory::createEntryPoint()" might add "?string" as a native return type declaration in the future. Do the same in child class "HWI\Bundle\OAuthBundle\DependencyInjection\Security\Factory\OAuthFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:111:"/opt/bitnami/pimcore/vendor/hwi/oauth-bundle/DependencyInjection/Security/Factory/OAuthAuthenticatorFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:364:"Method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\AbstractFactory::getListenerId()" might add "string" as a native return type declaration in the future. Do the same in child class "HWI\Bundle\OAuthBundle\DependencyInjection\Security\Factory\OAuthFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:111:"/opt/bitnami/pimcore/vendor/hwi/oauth-bundle/DependencyInjection/Security/Factory/OAuthAuthenticatorFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Class "HWI\Bundle\OAuthBundle\DependencyInjection\Security\Factory\OAuthAuthenticatorFactory" should implement method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\AuthenticatorFactoryInterface::getPriority(): int": defines the position at which the authenticator is called.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:58:"/opt/bitnami/pimcore/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:678;s:8:"function";s:5:"build";s:5:"class";s:37:"HWI\Bundle\OAuthBundle\HWIOAuthBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:16384;s:7:"message";s:127:"Since symfony/yaml 5.1: Support for parsing numbers prefixed with 0 as octal numbers. They will be parsed as strings as of 6.0.";s:4:"file";s:51:"/opt/bitnami/pimcore/vendor/symfony/yaml/Inline.php";s:4:"line";i:678;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:51:"/opt/bitnami/pimcore/vendor/symfony/yaml/Inline.php";s:4:"line";i:316;s:8:"function";s:14:"evaluateScalar";s:5:"class";s:29:"Symfony\Component\Yaml\Inline";s:4:"type";s:2:"::";}}s:5:"count";i:4;}i:11;a:6:{s:4:"type";i:16384;s:7:"message";s:301:"Method "Symfony\Contracts\Service\ServiceSubscriberInterface::getSubscribedServices()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Controller\Controller" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:81:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/lib/Controller/FrontendController.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:16384;s:7:"message";s:309:"Method "Symfony\Contracts\Service\ServiceSubscriberInterface::getSubscribedServices()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Controller\FrontendController" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:54:"/opt/bitnami/pimcore/src/Controller/BaseController.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "App\Command\AssetCopyrightCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:14;a:6:{s:4:"type";i:16384;s:7:"message";s:265:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "App\Command\DataCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:15;a:6:{s:4:"type";i:16384;s:7:"message";s:267:"Since symfony/framework-bundle 5.3: Not setting the "framework.session.storage_factory_id" configuration option is deprecated, it will default to "session.storage.factory.native" and will replace the "framework.session.storage_id" configuration option in version 6.0.";s:4:"file";s:95:"/opt/bitnami/pimcore/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:1126;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:95:"/opt/bitnami/pimcore/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:353;s:8:"function";s:28:"registerSessionConfiguration";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:16;a:6:{s:4:"type";i:16384;s:7:"message";s:168:"Since symfony/framework-bundle 5.4: Not setting the "framework.messenger.reset_on_message" configuration option is deprecated, it will default to "true" in version 6.0.";s:4:"file";s:95:"/opt/bitnami/pimcore/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:2165;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:95:"/opt/bitnami/pimcore/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:401;s:8:"function";s:30:"registerMessengerConfiguration";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:17;a:6:{s:4:"type";i:16384;s:7:"message";s:153:"Since symfony/framework-bundle 5.1: Not setting the "framework.router.utf8" configuration option is deprecated, it will default to "true" in version 6.0.";s:4:"file";s:95:"/opt/bitnami/pimcore/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:1058;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:95:"/opt/bitnami/pimcore/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:457;s:8:"function";s:27:"registerRouterConfiguration";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:18;a:6:{s:4:"type";i:16384;s:7:"message";s:215:"Since symfony/security-bundle 5.1: The "success_handler" at path "security.firewalls.pimcore_admin.logout" is deprecated, register a listener on the "Symfony\Component\Security\Http\Event\LogoutEvent" event instead.";s:4:"file";s:67:"/opt/bitnami/pimcore/vendor/symfony/config/Definition/ArrayNode.php";s:4:"line";i:241;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:66:"/opt/bitnami/pimcore/vendor/symfony/config/Definition/BaseNode.php";s:4:"line";i:455;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:19;a:6:{s:4:"type";i:16384;s:7:"message";s:215:"Since symfony/security-bundle 5.1: The "success_handler" at path "security.firewalls.demo_frontend.logout" is deprecated, register a listener on the "Symfony\Component\Security\Http\Event\LogoutEvent" event instead.";s:4:"file";s:67:"/opt/bitnami/pimcore/vendor/symfony/config/Definition/ArrayNode.php";s:4:"line";i:241;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:66:"/opt/bitnami/pimcore/vendor/symfony/config/Definition/BaseNode.php";s:4:"line";i:455;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:20;a:6:{s:4:"type";i:16384;s:7:"message";s:127:"Since symfony/security-bundle 5.3: Not setting the "security.enable_authenticator_manager" config option to true is deprecated.";s:4:"file";s:93:"/opt/bitnami/pimcore/vendor/symfony/security-bundle/DependencyInjection/SecurityExtension.php";s:4:"line";i:120;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:101:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:21;a:6:{s:4:"type";i:16384;s:7:"message";s:337:"Method "Symfony\Component\Config\Definition\ConfigurationInterface::getConfigTreeBuilder()" might add "TreeBuilder" as a native return type declaration in the future. Do the same in implementation "Presta\SitemapBundle\DependencyInjection\Configuration" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:22;a:6:{s:4:"type";i:16384;s:7:"message";s:253:"Method "Countable::count()" might add "int" as a native return type declaration in the future. Do the same in implementation "Presta\SitemapBundle\Sitemap\XmlConstraint" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:67:"/opt/bitnami/pimcore/vendor/symfony/config/Definition/Processor.php";s:4:"line";i:46;s:8:"function";s:20:"getConfigTreeBuilder";s:5:"class";s:54:"Presta\SitemapBundle\DependencyInjection\Configuration";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:23;a:6:{s:4:"type";i:16384;s:7:"message";s:339:"Method "Symfony\Component\Config\Definition\ConfigurationInterface::getConfigTreeBuilder()" might add "TreeBuilder" as a native return type declaration in the future. Do the same in implementation "League\FlysystemBundle\DependencyInjection\Configuration" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:24;a:6:{s:4:"type";i:16384;s:7:"message";s:331:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Workflow\EventSubscriber\NotificationSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Configuration.php";s:4:"line";i:174;s:8:"function";s:15:"addWorkflowNode";s:5:"class";s:59:"Pimcore\Bundle\CoreBundle\DependencyInjection\Configuration";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:25;a:6:{s:4:"type";i:16384;s:7:"message";s:339:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Workflow\EventSubscriber\ChangePublishedStateSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Configuration.php";s:4:"line";i:174;s:8:"function";s:15:"addWorkflowNode";s:5:"class";s:59:"Pimcore\Bundle\CoreBundle\DependencyInjection\Configuration";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:26;a:6:{s:4:"type";i:16384;s:7:"message";s:297:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\Bundle\DisableCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:27;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\Bundle\EnableCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:28;a:6:{s:4:"type";i:16384;s:7:"message";s:297:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\Bundle\InstallCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:29;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\Bundle\ListCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:30;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\Bundle\UninstallCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:31;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\CacheClearCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:32;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\CacheWarmingCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:33;a:6:{s:4:"type";i:16384;s:7:"message";s:297:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\ClassesRebuildCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:34;a:6:{s:4:"type";i:16384;s:7:"message";s:302:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\CustomLayoutRebuildCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:35;a:6:{s:4:"type";i:16384;s:7:"message";s:324:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\Definition\Import\AbstractStructureImportCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:36;a:6:{s:4:"type";i:16384;s:7:"message";s:308:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\DeleteClassificationStoreCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:37;a:6:{s:4:"type";i:16384;s:7:"message";s:305:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\DeleteUnusedLocaleDataCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:38;a:6:{s:4:"type";i:16384;s:7:"message";s:305:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\Document\GeneratePagePreviews" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:39;a:6:{s:4:"type";i:16384;s:7:"message";s:307:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\Document\MigrateElementsCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:40;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\EmailLogsCleanupCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:41;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\ExtJSCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:42;a:6:{s:4:"type";i:16384;s:7:"message";s:302:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\GenerateStaticPagesCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:43;a:6:{s:4:"type";i:16384;s:7:"message";s:307:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\InternalMigrationHelpersCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:44;a:6:{s:4:"type";i:16384;s:7:"message";s:315:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\InternalModelDaoMappingGeneratorCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:45;a:6:{s:4:"type";i:16384;s:7:"message";s:328:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\InternalUnicodeCldrLanguageTerritoryGeneratorCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:46;a:6:{s:4:"type";i:16384;s:7:"message";s:305:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\LowQualityImagePreviewCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:47;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\MaintenanceCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:48;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\MaintenanceModeCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:49;a:6:{s:4:"type";i:16384;s:7:"message";s:297:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\MigrateStorageCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:50;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\MysqlToolsCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:51;a:6:{s:4:"type";i:16384;s:7:"message";s:306:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\OptimizeImageThumbnailsCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:52;a:6:{s:4:"type";i:16384;s:7:"message";s:300:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\RequirementsCheckCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:53;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\ResetPasswordCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:54;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\RunScriptCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:55;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\SearchBackendReindexCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:56;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\ThumbnailsClearCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:57;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\CoreBundle\Command\WorkflowDumpCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:58;a:6:{s:4:"type";i:16384;s:7:"message";s:343:"Method "Symfony\Component\Config\Definition\ConfigurationInterface::getConfigTreeBuilder()" might add "TreeBuilder" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\DependencyInjection\Configuration" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:59;a:6:{s:4:"type";i:16384;s:7:"message";s:325:"Method "Symfony\Contracts\Service\ServiceSubscriberInterface::getSubscribedServices()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Controller\AdminController" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:106:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/AdminBundle/Controller/Admin/ElementControllerBase.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:60;a:6:{s:4:"type";i:16384;s:7:"message";s:356:"Method "Symfony\Component\Config\Definition\ConfigurationInterface::getConfigTreeBuilder()" might add "TreeBuilder" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\EcommerceFrameworkBundle\DependencyInjection\Configuration" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:61;a:6:{s:4:"type";i:16384;s:7:"message";s:340:"Method "Symfony\Contracts\Service\ServiceSubscriberInterface::getSubscribedServices()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\EcommerceFrameworkBundle\Controller\VoucherController" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:62;a:6:{s:4:"type";i:16384;s:7:"message";s:316:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\EcommerceFrameworkBundle\Command\IndexService\EsSyncCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:63;a:6:{s:4:"type";i:16384;s:7:"message";s:320:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\EcommerceFrameworkBundle\Command\IndexService\ResetQueueCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:64;a:6:{s:4:"type";i:16384;s:7:"message";s:350:"Method "Symfony\Component\Config\Definition\ConfigurationInterface::getConfigTreeBuilder()" might add "TreeBuilder" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\DependencyInjection\Configuration" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:65;a:6:{s:4:"type";i:16384;s:7:"message";s:309:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "CustomerManagementFrameworkBundle\Command\ActionTriggerQueueCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:66;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "CustomerManagementFrameworkBundle\Command\BuildSegmentsCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:67;a:6:{s:4:"type";i:16384;s:7:"message";s:302:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "CustomerManagementFrameworkBundle\Command\CronTriggerCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:68;a:6:{s:4:"type";i:16384;s:7:"message";s:306:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "CustomerManagementFrameworkBundle\Command\DuplicatesIndexCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:69;a:6:{s:4:"type";i:16384;s:7:"message";s:313:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "CustomerManagementFrameworkBundle\Command\SegmentAssignmentIndexCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:70;a:6:{s:4:"type";i:16384;s:7:"message";s:252:"Since symfony/dependency-injection 5.1: Not setting the attribute "package" of the "deprecated" option in "/opt/bitnami/pimcore/vendor/pimcore/customer-management-framework-bundle/src/DependencyInjection/../Resources/config/services.yml" is deprecated.";s:4:"file";s:82:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Loader/YamlFileLoader.php";s:4:"line";i:508;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:82:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Loader/YamlFileLoader.php";s:4:"line";i:256;s:8:"function";s:15:"parseDefinition";s:5:"class";s:59:"Symfony\Component\DependencyInjection\Loader\YamlFileLoader";s:4:"type";s:2:"->";}}s:5:"count";i:3;}i:71;a:6:{s:4:"type";i:16384;s:7:"message";s:252:"Since symfony/dependency-injection 5.1: Not setting the attribute "version" of the "deprecated" option in "/opt/bitnami/pimcore/vendor/pimcore/customer-management-framework-bundle/src/DependencyInjection/../Resources/config/services.yml" is deprecated.";s:4:"file";s:82:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Loader/YamlFileLoader.php";s:4:"line";i:512;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:82:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Loader/YamlFileLoader.php";s:4:"line";i:256;s:8:"function";s:15:"parseDefinition";s:5:"class";s:59:"Symfony\Component\DependencyInjection\Loader\YamlFileLoader";s:4:"type";s:2:"->";}}s:5:"count";i:3;}i:72;a:6:{s:4:"type";i:16384;s:7:"message";s:384:"Method "Pimcore\Bundle\AdminBundle\Controller\DoubleAuthenticationControllerInterface::needsSessionDoubleAuthenticationCheck()" might add "bool" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Controller\Rest\AbstractRestController" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:73;a:6:{s:4:"type";i:16384;s:7:"message";s:259:"Since symfony/dependency-injection 5.1: Not setting the attribute "package" of the "deprecated" option in "/opt/bitnami/pimcore/vendor/pimcore/customer-management-framework-bundle/src/DependencyInjection/../Resources/config/services_events.yml" is deprecated.";s:4:"file";s:82:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Loader/YamlFileLoader.php";s:4:"line";i:508;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:82:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Loader/YamlFileLoader.php";s:4:"line";i:256;s:8:"function";s:15:"parseDefinition";s:5:"class";s:59:"Symfony\Component\DependencyInjection\Loader\YamlFileLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:74;a:6:{s:4:"type";i:16384;s:7:"message";s:259:"Since symfony/dependency-injection 5.1: Not setting the attribute "version" of the "deprecated" option in "/opt/bitnami/pimcore/vendor/pimcore/customer-management-framework-bundle/src/DependencyInjection/../Resources/config/services_events.yml" is deprecated.";s:4:"file";s:82:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Loader/YamlFileLoader.php";s:4:"line";i:512;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:82:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Loader/YamlFileLoader.php";s:4:"line";i:256;s:8:"function";s:15:"parseDefinition";s:5:"class";s:59:"Symfony\Component\DependencyInjection\Loader\YamlFileLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:75;a:6:{s:4:"type";i:16384;s:7:"message";s:346:"Method "Symfony\Component\Config\Definition\ConfigurationInterface::getConfigTreeBuilder()" might add "TreeBuilder" as a native return type declaration in the future. Do the same in implementation "OutputDataConfigToolkitBundle\DependencyInjection\Configuration" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:76;a:6:{s:4:"type";i:16384;s:7:"message";s:326:"Method "Pimcore\Bundle\EcommerceFrameworkBundle\IndexService\Config\DefaultMysql::getTablename()" might add "string" as a native return type declaration in the future. Do the same in child class "App\Ecommerce\IndexService\Config\MySqlConfig" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:86:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveClassPass.php";s:4:"line";i:33;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:77;a:6:{s:4:"type";i:16384;s:7:"message";s:334:"Method "Pimcore\Bundle\EcommerceFrameworkBundle\IndexService\Config\DefaultMysql::getRelationTablename()" might add "string" as a native return type declaration in the future. Do the same in child class "App\Ecommerce\IndexService\Config\MySqlConfig" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:86:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveClassPass.php";s:4:"line";i:33;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:78;a:6:{s:4:"type";i:16384;s:7:"message";s:319:"Method "Pimcore\Bundle\EcommerceFrameworkBundle\IndexService\Config\DefaultMysql::inIndex()" might add "bool" as a native return type declaration in the future. Do the same in child class "App\Ecommerce\IndexService\Config\MySqlConfig" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:86:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveClassPass.php";s:4:"line";i:33;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:79;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\DeliveryAddressFormType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:80;a:6:{s:4:"type";i:16384;s:7:"message";s:276:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\LoginFormType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:81;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Twig\Extension\CategoryFilterExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:82;a:6:{s:4:"type";i:16384;s:7:"message";s:268:"Method "Twig\Extension\ExtensionInterface::getFilters()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Twig\Extension\Country" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:83;a:6:{s:4:"type";i:16384;s:7:"message";s:269:"Method "Twig\Extension\ExtensionInterface::getFilters()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Twig\Extension\Currency" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:84;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Twig\Extension\GeneralFilterExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:85;a:6:{s:4:"type";i:16384;s:7:"message";s:278:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Twig\Extension\UniqidExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:86;a:6:{s:4:"type";i:16384;s:7:"message";s:283:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Twig\Extension\ProductPageExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:87;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Twig\Extension\ExtensionInterface::getFilters()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Twig\Extension\ProductPageExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:88;a:6:{s:4:"type";i:16384;s:7:"message";s:276:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Twig\Extension\NewsExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:89;a:6:{s:4:"type";i:16384;s:7:"message";s:284:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Twig\Extension\PrintCatalogExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:90;a:6:{s:4:"type";i:16384;s:7:"message";s:209:"Since symfony/security-http 5.1: The "Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" class is deprecated, use "Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" instead.";s:4:"file";s:88:"/opt/bitnami/pimcore/vendor/symfony/security-http/Logout/DefaultLogoutSuccessHandler.php";s:4:"line";i:18;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:88:"/opt/bitnami/pimcore/vendor/symfony/security-http/Logout/DefaultLogoutSuccessHandler.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:91;a:6:{s:4:"type";i:16384;s:7:"message";s:225:"Since symfony/security-http 5.1: The "Symfony\Component\Security\Http\Logout\LogoutSuccessHandlerInterface" interface is deprecated, create a listener for the "Symfony\Component\Security\Http\Event\LogoutEvent" event instead.";s:4:"file";s:90:"/opt/bitnami/pimcore/vendor/symfony/security-http/Logout/LogoutSuccessHandlerInterface.php";s:4:"line";i:18;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:90:"/opt/bitnami/pimcore/vendor/symfony/security-http/Logout/LogoutSuccessHandlerInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:92;a:6:{s:4:"type";i:16384;s:7:"message";s:173:"The "App\EventListener\AuthenticationLogoutListener" class extends "Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" that is deprecated since Symfony 5.1.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:93;a:6:{s:4:"type";i:16384;s:7:"message";s:135:"Since symfony/http-foundation 5.3: The "Symfony\Component\HttpFoundation\Session\Attribute\NamespacedAttributeBag" class is deprecated.";s:4:"file";s:96:"/opt/bitnami/pimcore/vendor/symfony/http-foundation/Session/Attribute/NamespacedAttributeBag.php";s:4:"line";i:14;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:96:"/opt/bitnami/pimcore/vendor/symfony/http-foundation/Session/Attribute/NamespacedAttributeBag.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:94;a:6:{s:4:"type";i:16384;s:7:"message";s:209:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead.";s:4:"file";s:85:"/opt/bitnami/pimcore/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php";s:4:"line";i:17;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:85:"/opt/bitnami/pimcore/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:95;a:6:{s:4:"type";i:16384;s:7:"message";s:330:"Method "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface::getEncoder()" might add "PasswordEncoderInterface" as a native return type declaration in the future. Do the same in implementation "Pimcore\Security\Encoder\EncoderFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:96;a:6:{s:4:"type";i:16384;s:7:"message";s:316:"Method "Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerInterface::isOptional()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\HttpKernel\CacheWarmer\MkdirCacheWarmer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:97;a:6:{s:4:"type";i:16384;s:7:"message";s:310:"Method "Symfony\Component\HttpKernel\CacheWarmer\WarmableInterface::warmUp()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\HttpKernel\CacheWarmer\MkdirCacheWarmer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:98;a:6:{s:4:"type";i:16384;s:7:"message";s:322:"Method "Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerInterface::isOptional()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\HttpKernel\CacheWarmer\PimcoreCoreCacheWarmer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:99;a:6:{s:4:"type";i:16384;s:7:"message";s:316:"Method "Symfony\Component\HttpKernel\CacheWarmer\WarmableInterface::warmUp()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\HttpKernel\CacheWarmer\PimcoreCoreCacheWarmer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:100;a:6:{s:4:"type";i:16384;s:7:"message";s:357:"Method "Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterInterface::apply()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\Request\ParamConverter\DataObjectParamConverter" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:101;a:6:{s:4:"type";i:16384;s:7:"message";s:360:"Method "Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\Request\ParamConverter\DataObjectParamConverter" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:102;a:6:{s:4:"type";i:16384;s:7:"message";s:325:"Method "Symfony\Cmf\Component\Routing\RouteProviderInterface::getRouteCollectionForRequest()" might add "RouteCollection" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\DynamicRouteProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:103;a:6:{s:4:"type";i:16384;s:7:"message";s:301:"Method "Symfony\Cmf\Component\Routing\RouteProviderInterface::getRouteByName()" might add "Route" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\DynamicRouteProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:104;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Cmf\Component\Routing\RouteProviderInterface::getRoutesByNames()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\DynamicRouteProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:105;a:6:{s:4:"type";i:16384;s:7:"message";s:302:"Method "Symfony\Component\Routing\RequestContextAwareInterface::getContext()" might add "RequestContext" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Element\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:106;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Symfony\Cmf\Component\Routing\VersatileGeneratorInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Element\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:107;a:6:{s:4:"type";i:16384;s:7:"message";s:307:"Method "Symfony\Cmf\Component\Routing\VersatileGeneratorInterface::getRouteDebugMessage()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Element\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:108;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Routing\Generator\UrlGeneratorInterface::generate()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Element\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:109;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Symfony\Component\Routing\Matcher\RequestMatcherInterface::matchRequest()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Element\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:110;a:6:{s:4:"type";i:16384;s:7:"message";s:287:"Method "Symfony\Component\Routing\Matcher\UrlMatcherInterface::match()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Element\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:111;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Symfony\Component\Routing\RouterInterface::getRouteCollection()" might add "RouteCollection" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Element\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:112;a:6:{s:4:"type";i:16384;s:7:"message";s:306:"Method "Symfony\Component\Routing\RequestContextAwareInterface::getContext()" might add "RequestContext" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Staticroute\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:113;a:6:{s:4:"type";i:16384;s:7:"message";s:297:"Method "Symfony\Cmf\Component\Routing\VersatileGeneratorInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Staticroute\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:114;a:6:{s:4:"type";i:16384;s:7:"message";s:302:"Method "Symfony\Component\Routing\RouterInterface::getRouteCollection()" might add "RouteCollection" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Staticroute\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:115;a:6:{s:4:"type";i:16384;s:7:"message";s:311:"Method "Symfony\Cmf\Component\Routing\VersatileGeneratorInterface::getRouteDebugMessage()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Staticroute\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:116;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Method "Symfony\Component\Routing\Generator\UrlGeneratorInterface::generate()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Staticroute\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:117;a:6:{s:4:"type";i:16384;s:7:"message";s:302:"Method "Symfony\Component\Routing\Matcher\RequestMatcherInterface::matchRequest()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Staticroute\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:118;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Symfony\Component\Routing\Matcher\UrlMatcherInterface::match()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Staticroute\Router" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:119;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Symfony\Component\Config\Loader\LoaderInterface::load()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Loader\BundleRoutingLoader" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:120;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Config\Loader\LoaderInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Routing\Loader\BundleRoutingLoader" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:121;a:6:{s:4:"type";i:16384;s:7:"message";s:324:"Method "Symfony\Component\Workflow\MarkingStore\MarkingStoreInterface::getMarking()" might add "Marking" as a native return type declaration in the future. Do the same in implementation "Pimcore\Workflow\MarkingStore\StateTableMarkingStore" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:122;a:6:{s:4:"type";i:16384;s:7:"message";s:337:"Method "Symfony\Component\Workflow\MarkingStore\MarkingStoreInterface::getMarking()" might add "Marking" as a native return type declaration in the future. Do the same in implementation "Pimcore\Workflow\MarkingStore\DataObjectSplittedStateMarkingStore" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:123;a:6:{s:4:"type";i:16384;s:7:"message";s:324:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Workflow\EventSubscriber\NotesSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:124;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Symfony\Component\Workflow\Dumper\DumperInterface::dump()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Workflow\Dumper\GraphvizDumper" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:125;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Component\Workflow\Dumper\DumperInterface::dump()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Workflow\Dumper\StateMachineGraphvizDumper" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:126;a:6:{s:4:"type";i:16384;s:7:"message";s:253:"Method "Psr\Log\LoggerInterface::log()" might add "void" as a native return type declaration in the future. Do the same in implementation "Pimcore\Log\ApplicationLogger" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:127;a:6:{s:4:"type";i:16384;s:7:"message";s:259:"Method "Psr\Log\LoggerInterface::emergency()" might add "void" as a native return type declaration in the future. Do the same in implementation "Pimcore\Log\ApplicationLogger" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:128;a:6:{s:4:"type";i:16384;s:7:"message";s:258:"Method "Psr\Log\LoggerInterface::critical()" might add "void" as a native return type declaration in the future. Do the same in implementation "Pimcore\Log\ApplicationLogger" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:129;a:6:{s:4:"type";i:16384;s:7:"message";s:255:"Method "Psr\Log\LoggerInterface::error()" might add "void" as a native return type declaration in the future. Do the same in implementation "Pimcore\Log\ApplicationLogger" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:130;a:6:{s:4:"type";i:16384;s:7:"message";s:255:"Method "Psr\Log\LoggerInterface::alert()" might add "void" as a native return type declaration in the future. Do the same in implementation "Pimcore\Log\ApplicationLogger" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:131;a:6:{s:4:"type";i:16384;s:7:"message";s:257:"Method "Psr\Log\LoggerInterface::warning()" might add "void" as a native return type declaration in the future. Do the same in implementation "Pimcore\Log\ApplicationLogger" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:132;a:6:{s:4:"type";i:16384;s:7:"message";s:256:"Method "Psr\Log\LoggerInterface::notice()" might add "void" as a native return type declaration in the future. Do the same in implementation "Pimcore\Log\ApplicationLogger" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:133;a:6:{s:4:"type";i:16384;s:7:"message";s:254:"Method "Psr\Log\LoggerInterface::info()" might add "void" as a native return type declaration in the future. Do the same in implementation "Pimcore\Log\ApplicationLogger" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:134;a:6:{s:4:"type";i:16384;s:7:"message";s:255:"Method "Psr\Log\LoggerInterface::debug()" might add "void" as a native return type declaration in the future. Do the same in implementation "Pimcore\Log\ApplicationLogger" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:135;a:6:{s:4:"type";i:16384;s:7:"message";s:284:"Method "Symfony\Contracts\Translation\TranslatorInterface::trans()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Translation\Translator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:136;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Contracts\Translation\LocaleAwareInterface::getLocale()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Translation\Translator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:137;a:6:{s:4:"type";i:16384;s:7:"message";s:313:"Method "Symfony\Component\Translation\TranslatorBagInterface::getCatalogue()" might add "MessageCatalogueInterface" as a native return type declaration in the future. Do the same in implementation "Pimcore\Translation\Translator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:138;a:6:{s:4:"type";i:16384;s:7:"message";s:341:"Method "Symfony\Component\HttpKernel\Controller\ArgumentValueResolverInterface::resolve()" might add "iterable" as a native return type declaration in the future. Do the same in implementation "Pimcore\Controller\ArgumentValueResolver\EditmodeValueResolver" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:139;a:6:{s:4:"type";i:16384;s:7:"message";s:343:"Method "Symfony\Component\HttpKernel\Controller\ArgumentValueResolverInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Controller\ArgumentValueResolver\WebsiteConfigValueResolver" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:140;a:6:{s:4:"type";i:16384;s:7:"message";s:346:"Method "Symfony\Component\HttpKernel\Controller\ArgumentValueResolverInterface::resolve()" might add "iterable" as a native return type declaration in the future. Do the same in implementation "Pimcore\Controller\ArgumentValueResolver\WebsiteConfigValueResolver" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:141;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Method "JsonSerializable::jsonSerialize()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "Pimcore\Document\Editable\Block\BlockStateStack" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:142;a:6:{s:4:"type";i:16384;s:7:"message";s:340:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\RoutingListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:143;a:6:{s:4:"type";i:16384;s:7:"message";s:338:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\PimcoreContextListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:144;a:6:{s:4:"type";i:16384;s:7:"message";s:349:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentFallbackListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:145;a:6:{s:4:"type";i:16384;s:7:"message";s:337:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\PimcoreHeaderListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:146;a:6:{s:4:"type";i:16384;s:7:"message";s:339:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\LocaleListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:147;a:6:{s:4:"type";i:16384;s:7:"message";s:340:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\TranslationDebugListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:148;a:6:{s:4:"type";i:16384;s:7:"message";s:340:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\ElementListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:149;a:6:{s:4:"type";i:16384;s:7:"message";s:356:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\GlobalTemplateVariablesListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:150;a:6:{s:4:"type";i:16384;s:7:"message";s:350:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\HardlinkCanonicalListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:151;a:6:{s:4:"type";i:16384;s:7:"message";s:343:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\BlockStateListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:152;a:6:{s:4:"type";i:16384;s:7:"message";s:349:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentMetaDataListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:153;a:6:{s:4:"type";i:16384;s:7:"message";s:349:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentRendererListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:154;a:6:{s:4:"type";i:16384;s:7:"message";s:346:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentStackListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:155;a:6:{s:4:"type";i:16384;s:7:"message";s:352:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\StaticPageGeneratorListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:156;a:6:{s:4:"type";i:16384;s:7:"message";s:348:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\ContentTemplateListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:157;a:6:{s:4:"type";i:16384;s:7:"message";s:341:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\EventedControllerListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:158;a:6:{s:4:"type";i:16384;s:7:"message";s:342:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:159;a:6:{s:4:"type";i:16384;s:7:"message";s:335:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:160;a:6:{s:4:"type";i:16384;s:7:"message";s:337:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:161;a:6:{s:4:"type";i:16384;s:7:"message";s:328:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\UUIDListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:162;a:6:{s:4:"type";i:16384;s:7:"message";s:341:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\ResponseExceptionListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:163;a:6:{s:4:"type";i:16384;s:7:"message";s:338:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\ResponseHeaderListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:164;a:6:{s:4:"type";i:16384;s:7:"message";s:341:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\EditmodeListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:165;a:6:{s:4:"type";i:16384;s:7:"message";s:337:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\ResponseStackListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:166;a:6:{s:4:"type";i:16384;s:7:"message";s:367:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\InternalWysiwygHtmlAttributeFilterListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:167;a:6:{s:4:"type";i:16384;s:7:"message";s:364:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleSearchConsoleVerificationListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:168;a:6:{s:4:"type";i:16384;s:7:"message";s:348:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\Frontend\OutputTimestampListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:169;a:6:{s:4:"type";i:16384;s:7:"message";s:339:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\WebDebugToolbarListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:170;a:6:{s:4:"type";i:16384;s:7:"message";s:350:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\EventListener\MessengerClearRuntimeCacheListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:171;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Templating\EngineInterface::exists()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Templating\TwigDefaultDelegatingEngine" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:172;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Templating\EngineInterface::render()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Templating\TwigDefaultDelegatingEngine" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:173;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Templating\EngineInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Templating\TwigDefaultDelegatingEngine" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:174;a:6:{s:4:"type";i:16384;s:7:"message";s:332:"Method "Symfony\Component\HttpKernel\DataCollector\DataCollectorInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\DataCollector\PimcoreDataCollector" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:175;a:6:{s:4:"type";i:16384;s:7:"message";s:341:"Method "Symfony\Component\HttpKernel\DataCollector\DataCollectorInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\CoreBundle\DataCollector\PimcoreTargetingDataCollector" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:176;a:6:{s:4:"type";i:16384;s:7:"message";s:330:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Sitemap\EventListener\SitemapGeneratorListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:177;a:6:{s:4:"type";i:16384;s:7:"message";s:325:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Targeting\EventListener\TargetingListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:178;a:6:{s:4:"type";i:16384;s:7:"message";s:335:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Targeting\EventListener\DocumentTargetGroupListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:179;a:6:{s:4:"type";i:16384;s:7:"message";s:342:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Targeting\EventListener\FullPageCacheCookieCleanupListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:180;a:6:{s:4:"type";i:16384;s:7:"message";s:333:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Targeting\EventListener\VisitedPagesCountListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:181;a:6:{s:4:"type";i:16384;s:7:"message";s:323:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Targeting\EventListener\ToolbarListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:182;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Twig\Extension\ExtensionInterface::getFilters()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Twig\Extension\HelpersExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:183;a:6:{s:4:"type";i:16384;s:7:"message";s:283:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Twig\Extension\HelpersExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:184;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Method "Twig\Extension\ExtensionInterface::getTests()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Twig\Extension\HelpersExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:185;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Twig\Extension\DocumentEditableExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:186;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Twig\Extension\SubrequestExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:187;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Twig\Extension\PimcoreObjectExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:188;a:6:{s:4:"type";i:16384;s:7:"message";s:287:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Twig\Extension\PimcoreToolExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:189;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Twig\Extension\WebsiteConfigExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:190;a:6:{s:4:"type";i:16384;s:7:"message";s:280:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Twig\Extension\DumpExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:191;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Twig\Extension\ExtensionInterface::getTests()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Twig\Extension\DataObjectHelperExtensions" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:192;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Twig\Extension\AdminExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:193;a:6:{s:4:"type";i:16384;s:7:"message";s:312:"Method "Symfony\Contracts\Translation\TranslatorInterface::trans()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Translation\AdminUserTranslator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:194;a:6:{s:4:"type";i:16384;s:7:"message";s:317:"Method "Symfony\Contracts\Translation\LocaleAwareInterface::getLocale()" might add "string" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Translation\AdminUserTranslator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:195;a:6:{s:4:"type";i:16384;s:7:"message";s:346:"Class "Pimcore\Bundle\AdminBundle\Security\User\UserProvider" should implement method "Symfony\Component\Security\Core\User\UserProviderInterface::loadUserByIdentifier(string $identifier): UserInterface": loads the user for the given user identifier (e.g. username or email). This method must throw UserNotFoundException if the user is not found.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:196;a:6:{s:4:"type";i:16384;s:7:"message";s:336:"Method "Symfony\Component\Security\Core\User\UserProviderInterface::loadUserByUsername()" might add "UserInterface" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\User\UserProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:197;a:6:{s:4:"type";i:16384;s:7:"message";s:329:"Method "Symfony\Component\Security\Core\User\UserProviderInterface::refreshUser()" might add "UserInterface" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\User\UserProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:198;a:6:{s:4:"type";i:16384;s:7:"message";s:322:"Method "Symfony\Component\Security\Core\User\UserProviderInterface::supportsClass()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\User\UserProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:199;a:6:{s:4:"type";i:16384;s:7:"message";s:347:"Method "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface::getEncoder()" might add "PasswordEncoderInterface" as a native return type declaration in the future. Do the same in implementation "Pimcore\Security\Encoder\Factory\UserAwareEncoderFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:200;a:6:{s:4:"type";i:16384;s:7:"message";s:222:"The "Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator" class extends "Symfony\Component\Security\Guard\AbstractGuardAuthenticator" that is deprecated since Symfony 5.3, use the new authenticator system instead.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:201;a:6:{s:4:"type";i:16384;s:7:"message";s:321:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:202;a:6:{s:4:"type";i:16384;s:7:"message";s:343:"Method "Symfony\Component\Security\Http\EntryPoint\AuthenticationEntryPointInterface::start()" might add "Response" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:203;a:6:{s:4:"type";i:16384;s:7:"message";s:328:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::getCredentials()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:204;a:6:{s:4:"type";i:16384;s:7:"message";s:330:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::getUser()" might add "?UserInterface" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:205;a:6:{s:4:"type";i:16384;s:7:"message";s:329:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::checkCredentials()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:206;a:6:{s:4:"type";i:16384;s:7:"message";s:341:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::onAuthenticationFailure()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:207;a:6:{s:4:"type";i:16384;s:7:"message";s:341:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::onAuthenticationSuccess()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:208;a:6:{s:4:"type";i:16384;s:7:"message";s:331:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::supportsRememberMe()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:209;a:6:{s:4:"type";i:16384;s:7:"message";s:362:"Method "Symfony\Component\Security\Guard\AbstractGuardAuthenticator::createAuthenticatedToken()" might add "PostAuthenticationGuardToken" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:210;a:6:{s:4:"type";i:16384;s:7:"message";s:188:"The "Pimcore\Bundle\AdminBundle\Security\LogoutSuccessHandler" class implements "Symfony\Component\Security\Http\Logout\LogoutSuccessHandlerInterface" that is deprecated since Symfony 5.1.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:211;a:6:{s:4:"type";i:16384;s:7:"message";s:341:"Method "Symfony\Component\Security\Http\Logout\LogoutSuccessHandlerInterface::onLogoutSuccess()" might add "Response" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Security\LogoutSuccessHandler" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:212;a:6:{s:4:"type";i:16384;s:7:"message";s:180:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\User\UserChecker" class is deprecated, use "Symfony\Component\Security\Core\User\InMemoryUserChecker" instead.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/security-core/User/UserChecker.php";s:4:"line";i:14;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:70:"/opt/bitnami/pimcore/vendor/symfony/security-core/User/UserChecker.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:213;a:6:{s:4:"type";i:16384;s:7:"message";s:345:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\EventListener\BruteforceProtectionListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:214;a:6:{s:4:"type";i:16384;s:7:"message";s:355:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\EventListener\AdminAuthenticationDoubleCheckListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:215;a:6:{s:4:"type";i:16384;s:7:"message";s:339:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\EventListener\CsrfProtectionListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:216;a:6:{s:4:"type";i:16384;s:7:"message";s:335:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\EventListener\GridConfigListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:217;a:6:{s:4:"type";i:16384;s:7:"message";s:337:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\EventListener\ImportConfigListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:218;a:6:{s:4:"type";i:16384;s:7:"message";s:334:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\EventListener\HttpCacheListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:219;a:6:{s:4:"type";i:16384;s:7:"message";s:340:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\EventListener\UserPerspectiveListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:220;a:6:{s:4:"type";i:16384;s:7:"message";s:340:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\EventListener\UsageStatisticsListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:221;a:6:{s:4:"type";i:16384;s:7:"message";s:348:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\EventListener\EnablePreviewTimeSliderListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:222;a:6:{s:4:"type";i:16384;s:7:"message";s:349:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\IndexUpdateListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:223;a:6:{s:4:"type";i:16384;s:7:"message";s:371:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\Frontend\TrackingCodeFlashMessageListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:224;a:6:{s:4:"type";i:16384;s:7:"message";s:349:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Analytics\GoogleTagManager\EventSubscriber\TrackingCodeSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:225;a:6:{s:4:"type";i:16384;s:7:"message";s:256:"The "Pimcore\Bundle\CoreBundle\EventListener\Traits\PimcoreContextAwareTrait" trait is considered internal. It may change without further notice. You should not use it from "CustomerManagementFrameworkBundle\CustomerSaveManager\DefaultCustomerSaveManager".";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:226;a:6:{s:4:"type";i:16384;s:7:"message";s:313:"The "CustomerManagementFrameworkBundle\CustomerSaveManager\DefaultCustomerSaveManager::setSaveOptions()" method will require a new "bool $clone" argument in the next major version of its interface "CustomerManagementFrameworkBundle\CustomerSaveManager\CustomerSaveManagerInterface", not defining it is deprecated.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:227;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"The "CustomerManagementFrameworkBundle\CustomerProvider\DefaultCustomerProvider::getById()" method will require a new "bool $foce" argument in the next major version of its interface "CustomerManagementFrameworkBundle\CustomerProvider\CustomerProviderInterface", not defining it is deprecated.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:228;a:6:{s:4:"type";i:16384;s:7:"message";s:307:"The "CustomerManagementFrameworkBundle\CustomerProvider\DefaultCustomerProvider::getActiveCustomerByEmail()" method will require a new "int $id" argument in the next major version of its interface "CustomerManagementFrameworkBundle\CustomerProvider\CustomerProviderInterface", not defining it is deprecated.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:229;a:6:{s:4:"type";i:16384;s:7:"message";s:310:"The "CustomerManagementFrameworkBundle\CustomerProvider\DefaultCustomerProvider::getActiveCustomerByEmail()" method will require a new "bool $foce" argument in the next major version of its interface "CustomerManagementFrameworkBundle\CustomerProvider\CustomerProviderInterface", not defining it is deprecated.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:230;a:6:{s:4:"type";i:16384;s:7:"message";s:315:"The "CustomerManagementFrameworkBundle\DuplicatesIndex\DefaultMariaDbDuplicatesIndex::recreateIndex()" method will require a new "LoggerInterface $logger" argument in the next major version of its interface "CustomerManagementFrameworkBundle\DuplicatesIndex\DuplicatesIndexInterface", not defining it is deprecated.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:231;a:6:{s:4:"type";i:16384;s:7:"message";s:269:"The "CustomerManagementFrameworkBundle\RESTApi\CustomersHandler::readRecord()" method will require a new "array $params" argument in the next major version of its interface "CustomerManagementFrameworkBundle\RESTApi\CrudHandlerInterface", not defining it is deprecated.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:232;a:6:{s:4:"type";i:16384;s:7:"message";s:271:"The "CustomerManagementFrameworkBundle\RESTApi\CustomersHandler::updateRecord()" method will require a new "array $params" argument in the next major version of its interface "CustomerManagementFrameworkBundle\RESTApi\CrudHandlerInterface", not defining it is deprecated.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:233;a:6:{s:4:"type";i:16384;s:7:"message";s:268:"The "CustomerManagementFrameworkBundle\RESTApi\SegmentsHandler::readRecord()" method will require a new "array $params" argument in the next major version of its interface "CustomerManagementFrameworkBundle\RESTApi\CrudHandlerInterface", not defining it is deprecated.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:234;a:6:{s:4:"type";i:16384;s:7:"message";s:270:"The "CustomerManagementFrameworkBundle\RESTApi\SegmentsHandler::updateRecord()" method will require a new "array $params" argument in the next major version of its interface "CustomerManagementFrameworkBundle\RESTApi\CrudHandlerInterface", not defining it is deprecated.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:235;a:6:{s:4:"type";i:16384;s:7:"message";s:273:"The "CustomerManagementFrameworkBundle\RESTApi\SegmentGroupsHandler::readRecord()" method will require a new "array $params" argument in the next major version of its interface "CustomerManagementFrameworkBundle\RESTApi\CrudHandlerInterface", not defining it is deprecated.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:236;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"The "CustomerManagementFrameworkBundle\RESTApi\SegmentGroupsHandler::updateRecord()" method will require a new "array $params" argument in the next major version of its interface "CustomerManagementFrameworkBundle\RESTApi\CrudHandlerInterface", not defining it is deprecated.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:237;a:6:{s:4:"type";i:16384;s:7:"message";s:317:"Method "Pimcore\Extension\Bundle\Installer\InstallerInterface::needsReloadAfterInstall()" might add "bool" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Installer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:238;a:6:{s:4:"type";i:16384;s:7:"message";s:222:"The "Pimcore\Bundle\AdminBundle\GDPR\DataProvider\DataObjects" class is considered internal. It may change without further notice. You should not use it from "CustomerManagementFrameworkBundle\GDPR\DataProvider\Customers".";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:239;a:6:{s:4:"type";i:16384;s:7:"message";s:243:"The "Pimcore\Bundle\CoreBundle\EventListener\Traits\PimcoreContextAwareTrait" trait is considered internal. It may change without further notice. You should not use it from "CustomerManagementFrameworkBundle\Event\Frontend\UrlActivityTracker".";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:240;a:6:{s:4:"type";i:16384;s:7:"message";s:343:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Event\Frontend\UrlActivityTracker" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:241;a:6:{s:4:"type";i:16384;s:7:"message";s:357:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Targeting\EventListener\ElementSegmentsListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:242;a:6:{s:4:"type";i:16384;s:7:"message";s:358:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Targeting\EventListener\TargetingToolbarListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:243;a:6:{s:4:"type";i:16384;s:7:"message";s:375:"Class "CustomerManagementFrameworkBundle\Security\UserProvider\CustomerObjectUserProvider" should implement method "Symfony\Component\Security\Core\User\UserProviderInterface::loadUserByIdentifier(string $identifier): UserInterface": loads the user for the given user identifier (e.g. username or email). This method must throw UserNotFoundException if the user is not found.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:244;a:6:{s:4:"type";i:16384;s:7:"message";s:365:"Method "Symfony\Component\Security\Core\User\UserProviderInterface::loadUserByUsername()" might add "UserInterface" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\UserProvider\CustomerObjectUserProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:245;a:6:{s:4:"type";i:16384;s:7:"message";s:358:"Method "Symfony\Component\Security\Core\User\UserProviderInterface::refreshUser()" might add "UserInterface" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\UserProvider\CustomerObjectUserProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:246;a:6:{s:4:"type";i:16384;s:7:"message";s:351:"Method "Symfony\Component\Security\Core\User\UserProviderInterface::supportsClass()" might add "bool" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\UserProvider\CustomerObjectUserProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:247;a:6:{s:4:"type";i:16384;s:7:"message";s:234:"The "CustomerManagementFrameworkBundle\Security\Guard\WebserviceAuthenticator" class extends "Symfony\Component\Security\Guard\AbstractGuardAuthenticator" that is deprecated since Symfony 5.3, use the new authenticator system instead.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:248;a:6:{s:4:"type";i:16384;s:7:"message";s:333:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\Guard\WebserviceAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:249;a:6:{s:4:"type";i:16384;s:7:"message";s:355:"Method "Symfony\Component\Security\Http\EntryPoint\AuthenticationEntryPointInterface::start()" might add "Response" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\Guard\WebserviceAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:250;a:6:{s:4:"type";i:16384;s:7:"message";s:340:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::getCredentials()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\Guard\WebserviceAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:251;a:6:{s:4:"type";i:16384;s:7:"message";s:342:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::getUser()" might add "?UserInterface" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\Guard\WebserviceAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:252;a:6:{s:4:"type";i:16384;s:7:"message";s:341:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::checkCredentials()" might add "bool" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\Guard\WebserviceAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:253;a:6:{s:4:"type";i:16384;s:7:"message";s:353:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::onAuthenticationFailure()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\Guard\WebserviceAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:254;a:6:{s:4:"type";i:16384;s:7:"message";s:353:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::onAuthenticationSuccess()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\Guard\WebserviceAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:255;a:6:{s:4:"type";i:16384;s:7:"message";s:343:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::supportsRememberMe()" might add "bool" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\Guard\WebserviceAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:256;a:6:{s:4:"type";i:16384;s:7:"message";s:371:"Class "CustomerManagementFrameworkBundle\Security\UserProvider\OAuthAwareUserProvider" should implement method "Symfony\Component\Security\Core\User\UserProviderInterface::loadUserByIdentifier(string $identifier): UserInterface": loads the user for the given user identifier (e.g. username or email). This method must throw UserNotFoundException if the user is not found.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:257;a:6:{s:4:"type";i:16384;s:7:"message";s:385:"Method "HWI\Bundle\OAuthBundle\Security\Core\User\OAuthAwareUserProviderInterface::loadUserByOAuthUserResponse()" might add "UserInterface" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\UserProvider\OAuthAwareUserProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:258;a:6:{s:4:"type";i:16384;s:7:"message";s:361:"Method "Symfony\Component\Security\Core\User\UserProviderInterface::loadUserByUsername()" might add "UserInterface" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\UserProvider\OAuthAwareUserProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:259;a:6:{s:4:"type";i:16384;s:7:"message";s:354:"Method "Symfony\Component\Security\Core\User\UserProviderInterface::refreshUser()" might add "UserInterface" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\UserProvider\OAuthAwareUserProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:260;a:6:{s:4:"type";i:16384;s:7:"message";s:347:"Method "Symfony\Component\Security\Core\User\UserProviderInterface::supportsClass()" might add "bool" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Security\UserProvider\OAuthAwareUserProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:261;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "Web2PrintToolsBundle\Twig\OutputChannelExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:262;a:6:{s:4:"type";i:16384;s:7:"message";s:310:"Method "Pimcore\Extension\Bundle\Installer\InstallerInterface::needsReloadAfterInstall()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Web2PrintToolsBundle\Tools\Installer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:263;a:6:{s:4:"type";i:16384;s:7:"message";s:310:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\General\AnyDocumentTargetType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:264;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\AssetType\AssetTreeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:265;a:6:{s:4:"type";i:16384;s:7:"message";s:312:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\ClassificationstoreType\Feature" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:266;a:6:{s:4:"type";i:16384;s:7:"message";s:306:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\DocumentType\DocumentType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:267;a:6:{s:4:"type";i:16384;s:7:"message";s:310:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\DocumentType\DocumentTreeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:268;a:6:{s:4:"type";i:16384;s:7:"message";s:313:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\DocumentType\DocumentElementType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:269;a:6:{s:4:"type";i:16384;s:7:"message";s:310:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\DataObjectType\ObjectTreeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:270;a:6:{s:4:"type";i:16384;s:7:"message";s:317:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\DataObjectType\AbstractRelationsType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:84:"/opt/bitnami/pimcore/vendor/pimcore/data-hub/src/GraphQL/DataObjectType/HrefType.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:271;a:6:{s:4:"type";i:16384;s:7:"message";s:313:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\DataObjectType\VideoTypeDataType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:272;a:6:{s:4:"type";i:16384;s:7:"message";s:305:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\PropertyType\ObjectsType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:273;a:6:{s:4:"type";i:16384;s:7:"message";s:313:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\PropertyType\ElementPropertyType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:274;a:6:{s:4:"type";i:16384;s:7:"message";s:313:"Method "GraphQL\Type\Definition\UnionType::resolveType()" might add "?callable" as a native return type declaration in the future. Do the same in child class "Pimcore\Bundle\DataHubBundle\GraphQL\PropertyType\HotspotMetadataType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:275;a:6:{s:4:"type";i:16384;s:7:"message";s:337:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\DataHubBundle\EventListener\DataChangeListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:276;a:6:{s:4:"type";i:16384;s:7:"message";s:322:"Method "Pimcore\Extension\Document\Areabrick\TemplateAreabrickInterface::getTemplateLocation()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\AbstractAreabrick" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:67:"/opt/bitnami/pimcore/src/Document/Areabrick/GallerySingleImages.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:277;a:6:{s:4:"type";i:16384;s:7:"message";s:320:"Method "Pimcore\Extension\Document\Areabrick\TemplateAreabrickInterface::getTemplateSuffix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\AbstractAreabrick" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:67:"/opt/bitnami/pimcore/src/Document/Areabrick/GallerySingleImages.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:278;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\GallerySingleImages" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:279;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\ProductTeaser" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:280;a:6:{s:4:"type";i:16384;s:7:"message";s:300:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\PrintProductRow" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:281;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\HeroGrid" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:282;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\TextAccordion" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:283;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\EmailNews" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:284;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\PrintToc" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:285;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\PrintPageBreak" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:286;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\Wysiwyg" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:287;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\GalleryFolder" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:288;a:6:{s:4:"type";i:16384;s:7:"message";s:302:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\PrintProductTable" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:289;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\Pdf" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:290;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\PrintTitlePage" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:291;a:6:{s:4:"type";i:16384;s:7:"message";s:297:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\EmailWysiwyg" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:292;a:6:{s:4:"type";i:16384;s:7:"message";s:305:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\TimeSliderFeaturette" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:293;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\ImageHotspotMarker" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:294;a:6:{s:4:"type";i:16384;s:7:"message";s:300:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\GalleryCarousel" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:295;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\IconTeaserRow" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:296;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\PrintKeyVisual" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:297;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\StandardTeaser" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:298;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\HorizontalLine" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:299;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\ImageMetadata" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:300;a:6:{s:4:"type";i:16384;s:7:"message";s:297:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\PrintWysiwyg" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:301;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\EmailImage" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:302;a:6:{s:4:"type";i:16384;s:7:"message";s:310:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\PersonalizedProductTeaser" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:303;a:6:{s:4:"type";i:16384;s:7:"message";s:312:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::action()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\PersonalizedProductTeaser" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:304;a:6:{s:4:"type";i:16384;s:7:"message";s:302:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\WysiwygWithImages" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:305;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\HeroTeaser" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:306;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\ProductGrid" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:307;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::action()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\ProductGrid" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:308;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Pimcore\Extension\Document\Areabrick\AreabrickInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Document\Areabrick\EmailTeaser" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/opt/bitnami/pimcore/vendor/pimcore/pimcore/bundles/CoreBundle/DependencyInjection/Compiler/AreabrickPass.php";s:4:"line";i:251;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:309;a:6:{s:4:"type";i:16384;s:7:"message";s:247:"Method "Doctrine\DBAL\Connection::connect()" might add "bool" as a native return type declaration in the future. Do the same in child class "Pimcore\Db\Connection" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:310;a:6:{s:4:"type";i:16384;s:7:"message";s:379:"Method "Symfony\Component\Serializer\Normalizer\NormalizerInterface::normalize()" might add "array|string|int|float|bool|\ArrayObject|null" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Serializer\Normalizer\ReferenceLoopNormalizer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:311;a:6:{s:4:"type";i:16384;s:7:"message";s:350:"Method "Symfony\Component\Serializer\Normalizer\NormalizerInterface::supportsNormalization()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Pimcore\Bundle\AdminBundle\Serializer\Normalizer\ReferenceLoopNormalizer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:312;a:6:{s:4:"type";i:16384;s:7:"message";s:316:"Method "Twig\Extension\ExtensionInterface::getFilters()" might add "array" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Twig\Extension\CmfFrontendUtilsExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:313;a:6:{s:4:"type";i:16384;s:7:"message";s:313:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "CustomerManagementFrameworkBundle\Twig\Extension\CmfUrlUtilsExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:314;a:6:{s:4:"type";i:16384;s:7:"message";s:174:"Since symfony/security-http 5.3: The "Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" class is deprecated, use the new authenticator system instead.";s:4:"file";s:94:"/opt/bitnami/pimcore/vendor/symfony/security-http/Firewall/AnonymousAuthenticationListener.php";s:4:"line";i:22;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:94:"/opt/bitnami/pimcore/vendor/symfony/security-http/Firewall/AnonymousAuthenticationListener.php";}s:8:"function";s:7:"include";}}s:5:"count";i:2;}i:315;a:6:{s:4:"type";i:16384;s:7:"message";s:172:"Since symfony/security-guard 5.3: The "Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" class is deprecated, use the new authenticator system instead.";s:4:"file";s:91:"/opt/bitnami/pimcore/vendor/symfony/security-guard/Firewall/GuardAuthenticationListener.php";s:4:"line";i:31;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:91:"/opt/bitnami/pimcore/vendor/symfony/security-guard/Firewall/GuardAuthenticationListener.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:316;a:6:{s:4:"type";i:16384;s:7:"message";s:185:"Since symfony/security-http 5.3: The "Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" class is deprecated, use the new authenticator system instead.";s:4:"file";s:105:"/opt/bitnami/pimcore/vendor/symfony/security-http/Firewall/UsernamePasswordFormAuthenticationListener.php";s:4:"line";i:32;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:105:"/opt/bitnami/pimcore/vendor/symfony/security-http/Firewall/UsernamePasswordFormAuthenticationListener.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:317;a:6:{s:4:"type";i:16384;s:7:"message";s:173:"Since symfony/security-http 5.3: The "Symfony\Component\Security\Http\Firewall\AbstractAuthenticationListener" class is deprecated, use the new authenticator system instead.";s:4:"file";s:93:"/opt/bitnami/pimcore/vendor/symfony/security-http/Firewall/AbstractAuthenticationListener.php";s:4:"line";i:34;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:93:"/opt/bitnami/pimcore/vendor/symfony/security-http/Firewall/AbstractAuthenticationListener.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:318;a:6:{s:4:"type";i:16384;s:7:"message";s:233:"The "HWI\Bundle\OAuthBundle\Security\Http\Firewall\OAuthListener" class extends "Symfony\Component\Security\Http\Firewall\AbstractAuthenticationListener" that is deprecated since Symfony 5.3, use the new authenticator system instead.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:319;a:6:{s:4:"type";i:16384;s:7:"message";s:347:"Method "Symfony\Component\Security\Http\Firewall\AbstractAuthenticationListener::requiresAuthentication()" might add "bool" as a native return type declaration in the future. Do the same in child class "HWI\Bundle\OAuthBundle\Security\Http\Firewall\OAuthListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:320;a:6:{s:4:"type";i:16384;s:7:"message";s:370:"Method "Symfony\Component\Security\Http\Firewall\AbstractAuthenticationListener::attemptAuthentication()" might add "TokenInterface|Response|null" as a native return type declaration in the future. Do the same in child class "HWI\Bundle\OAuthBundle\Security\Http\Firewall\OAuthListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:321;a:6:{s:4:"type";i:16384;s:7:"message";s:216:"Since symfony/security-http 5.4: The "Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" class is deprecated, use "Symfony\Component\Security\Http\RememberMe\SignatureRememberMeHandler" instead.";s:4:"file";s:93:"/opt/bitnami/pimcore/vendor/symfony/security-http/RememberMe/TokenBasedRememberMeServices.php";s:4:"line";i:21;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:93:"/opt/bitnami/pimcore/vendor/symfony/security-http/RememberMe/TokenBasedRememberMeServices.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:322;a:6:{s:4:"type";i:16384;s:7:"message";s:213:"Since symfony/security-http 5.4: The "Symfony\Component\Security\Http\RememberMe\AbstractRememberMeServices" class is deprecated, use "Symfony\Component\Security\Http\RememberMe\AbstractRememberMeHandler" instead.";s:4:"file";s:91:"/opt/bitnami/pimcore/vendor/symfony/security-http/RememberMe/AbstractRememberMeServices.php";s:4:"line";i:29;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:91:"/opt/bitnami/pimcore/vendor/symfony/security-http/RememberMe/AbstractRememberMeServices.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:323;a:6:{s:4:"type";i:16384;s:7:"message";s:219:"Since symfony/security-http 5.4: The "Symfony\Component\Security\Http\RememberMe\RememberMeServicesInterface" interface is deprecated, use "Symfony\Component\Security\Http\RememberMe\RememberMeHandlerInterface" instead.";s:4:"file";s:92:"/opt/bitnami/pimcore/vendor/symfony/security-http/RememberMe/RememberMeServicesInterface.php";s:4:"line";i:18;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:92:"/opt/bitnami/pimcore/vendor/symfony/security-http/RememberMe/RememberMeServicesInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:324;a:6:{s:4:"type";i:16384;s:7:"message";s:161:"Since symfony/security-http 5.3: The "Symfony\Component\Security\Http\Firewall\RememberMeListener" class is deprecated, use the new authenticator system instead.";s:4:"file";s:81:"/opt/bitnami/pimcore/vendor/symfony/security-http/Firewall/RememberMeListener.php";s:4:"line";i:27;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:81:"/opt/bitnami/pimcore/vendor/symfony/security-http/Firewall/RememberMeListener.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:325;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "App\EventListener\AuthenticationLogoutListener" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:326;a:6:{s:4:"type";i:16384;s:7:"message";s:266:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "App\Ecommerce\Overrides\Environment" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:327;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Since symfony/dependency-injection 5.1: The "Psr\Container\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Pimcore\Model\DataObject\QuantityValue\UnitConversionService" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:328;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Pimcore\Bundle\AdminBundle\Session\Handler\AdminSessionHandler" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:329;a:6:{s:4:"type";i:16384;s:7:"message";s:326:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\Frontend\TrackingCodeFlashMessageListener" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:330;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Pimcore\Bundle\EcommerceFrameworkBundle\SessionEnvironment" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:331;a:6:{s:4:"type";i:16384;s:7:"message";s:300:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Pimcore\Bundle\EcommerceFrameworkBundle\PricingManager\PricingManager" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:332;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Pimcore\Bundle\EcommerceFrameworkBundle\Tracking\TrackingManager" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:333;a:6:{s:4:"type";i:16384;s:7:"message";s:272:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "pimcore_ecommerce.pricing_manager.default" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:334;a:6:{s:4:"type";i:16384;s:7:"message";s:309:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "CustomerManagementFrameworkBundle\Security\Authentication\LoginManager" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:335;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "CustomerManagementFrameworkBundle\Security\OAuth\SessionTokenStorage" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:336;a:6:{s:4:"type";i:16384;s:7:"message";s:270:"Since symfony/dependency-injection 5.1: The "Psr\Container\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Pimcore\Bundle\DataHubBundle\Service\OutputCacheService" service.";s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"/opt/bitnami/pimcore/vendor/symfony/dependency-injection/Compiler/ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:337;a:6:{s:4:"type";i:16384;s:7:"message";s:362:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderPreparationListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:338;a:6:{s:4:"type";i:16384;s:7:"message";s:130:"Since symfony/security-http 5.4: The "Symfony\Component\Security\Http\EventListener\RememberMeLogoutListener" class is deprecated.";s:4:"file";s:92:"/opt/bitnami/pimcore/vendor/symfony/security-http/EventListener/RememberMeLogoutListener.php";s:4:"line";i:19;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:284;s:4:"args";a:1:{i:0;s:92:"/opt/bitnami/pimcore/vendor/symfony/security-http/EventListener/RememberMeLogoutListener.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:339;a:6:{s:4:"type";i:16384;s:7:"message";s:339:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Presta\SitemapBundle\EventListener\RouteAnnotationEventListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:340;a:6:{s:4:"type";i:16384;s:7:"message";s:359:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Scheb\TwoFactorBundle\Security\TwoFactor\Event\AuthenticationSuccessEventSuppressor" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:341;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "FOS\JsRoutingBundle\Command\DumpCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:342;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "FOS\JsRoutingBundle\Command\RouterDebugExposedCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:70:"/opt/bitnami/pimcore/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:78:"/opt/bitnami/pimcore/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}}